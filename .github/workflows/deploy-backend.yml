# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and DOTNET_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: kcurr-backend               # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: './backend/backend' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '7.0'                          # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    defaults: 
      run:
         working-directory: ./backend/backend

    steps:
      # Checkout the repo
      - uses: actions/checkout@main
      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release --property:PublishDir='${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v3
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'
      
      - name: logout
        run: |
          az logout

      - name: Export environment variables for App Service
        run: |
          echo "CloudMersiveApiKey=${{ secrets.CLOUDMERSIVE_API_KEY }}" >> $GITHUB_ENV
          echo "CurrencyApiApiKey=${{ secrets.CURRENCY_API_API_KEY }}" >> $GITHUB_ENV
          echo "CurrencyBeaconApiKey0=${{ secrets.CURRENCY_BEACON_API_KEY_0 }}" >> $GITHUB_ENV
          echo "CurrencyBeaconApiKey1=${{ secrets.CURRENCY_BEACON_API_KEY_1 }}" >> $GITHUB_ENV
          echo "CurrencyBeaconApiKey2=${{ secrets.CURRENCY_BEACON_API_KEY_2 }}" >> $GITHUB_ENV
          echo "RapidApiApiKey0=${{ secrets.RAPID_API_API_KEY_0 }}" >> $GITHUB_ENV
          echo "RapidApiApiKey1=${{ secrets.RAPID_API_API_KEY_1 }}" >> $GITHUB_ENV
          echo "RapidApiApiKey2=${{ secrets.RAPID_API_API_KEY_2 }}" >> $GITHUB_ENV
